# -*- coding: utf-8 -*-
"""Flaviana Gomes - 232_Vetor_m.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CASJN2FOroZzauDiSNhyw5Wh5rjYKwcK

#**EXERCÍCIOS SOBRE VETOR**

### 1. Faça um programa que calcule e apresente a média de idades de uma sala de 35 alunos.​​
"""

print(idades[3]) #pega um valor específico na posição 3

idades = [] #declaração do vetor
#estamos cadastrando elementos no vetor
soma_idades = 0 #quando quero acumular funções crio uma varíavel que começa do 0
for i in range(5):
    idades.append(int(input("Digite a idade: ")))
    soma_idades += idades[i]
print(idades)
media = soma_idades / len(idades)
print(f"Média de idades {media:.2f}")


#apresentando elemento do vetor
qtde_pessoas = 0
for i in range(len(idades)):
    print('Elemento:', idades[i], 'Índice: ', i) #saber identificar onde fica o elemento e o índice
    # quando quero só o índice é só o i
    if idades[i] > 20:
        qtde_pessoas = qtde_pessoas + 1
        # ou qtde_pessoas +=1
print('Quantas pessoas > 20 anos', qtde_pessoas)
print("Quantidade de elementos do vetor", len(idades))

idade = [] # declaração de um vetor
print(idade)
idade.append(21)
print(idade)
print(idade[0])
idade.append(47)
print(idade)
print(idade[1])
idade.append(31)
print(idade)
print(idade[2])
print(len(idade)) #tamanho do vetor

"""### 2. Faça um programa que calcule e apresente a média de alturas de uma sala de 35 alunos. Informe também quantos alunos **e** quais (índice/posição) são os que possuem idade superior a 25 anos.​ Use dois vetores, um para altura e outro para idade. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

alturas = []
idades = []
for i in range(5):
    altura = int(input("Digite a altura: "))
    idade = int(input("Digite a sua idade: "))
alturas.append(altura)
idades.append(idade)
soma_alturas = sum(alturas)
media_alturas = soma_alturas / len(alturas)
alunos_25 = [i for i, idade in enumerate(idades) if idade > 25]
[i for i, idade in enumerate(idades) if idade > 25]

if len(alunos_25) > 0:
    print("Alunos com idade superior a 25 anos:")
    for indice in alunos_25:
        print(f"Aluno {indice + 1}: {idades[indice]} anos")
else:
    print("Não há alunos com idade superior a 25 anos na sala.")

"""### 3. Faça um programa que carregue um vetor de dez elementos que contenha o nome de pessoas e outro que contenha o peso, encontre qual a pessoa mais gorda e mais magra e apresente o nome o peso das mesmas.​ Use dois vetores, um para peso e outro para nome. Não use nenhuma função pronta da linguagem Python, a não ser len() e append()."""

nomes = []
pesos = []
for i in range(4):
    nomes.append(input('Informe o nome: '))
    pesos.append(float(input('Informe o peso: ')))
for i in range(len(nomes)):
    if i == 0:
        gordo = pesos[i]
        nome_gordo = nomes[i]
        magro = pesos[i]
        nome_magro = nomes[i]
    if pesos[i] >= gordo:
        gordo = pesos[i]
        nome_gordo = nomes[i]
    if pesos[i] <= magro:
        magro = pesos[i]
        nome_magro = nomes[i]
print(nome_gordo,'é mais pesado, com',gordo,'Kg')
print(nome_magro,'é menos pesado, com',magro,'Kg')

"""### 4. Faça um programa que carregue um vetor com a média de dez alunos, calcule e mostre a MÉDIA DA SALA e quantos alunos estão acima e abaixo da média da sala. Não use nenhuma função pronta da linguagem Python, a não ser len() e append()."""

notas = []
for i in range(5):
    nota = float(input("Digite a sua nota: "))
    notas.append(nota)
soma = 0
for nota in notas:
    soma += nota
media = soma / len(notas)

acima_da_media = 0
abaixo_da_media = 0
for nota in notas:
    if nota > media:
        acima_da_media += 1
    elif nota < media:
        abaixo_da_media += 1

print(f"A média da sala é: {media:.2f}")
print(f"Alunos acima da média: {acima_da_media:.2f}")
print(f"Alunos abaixo da média: {abaixo_da_media:.2f}")

"""### 5. Faça um programa que carregue um vetor de oito elementos numéricos inteiros, calcule e mostre os números pares e suas respectivas índices/posições. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

elementos = []
for i in range(5):
    elementos.append(int(input("Digite um número inteiro: ")))

for i in range(len(elementos)):
    if elementos[i] % 2 == 0:
        par = elementos[i]
        print(f"O elemento {par} é par e está no índice", i)
    else:
        impar = elementos[i]
        print(f"O elemento {impar} é ímpar e está no índice", i)

"""### 6. Faça um programa que carregue um vetor com dez nomes e faça uma verificação se um determinado nome esta nesse vetor. Não use nenhuma função pronta da linguagem Python, a não ser len() e append()."""



#Carregar um vetor
#Faça a verificação de um nome
#A1 Ler o primeiro nome
#A2 Ler o segundo nome
#B1 Qual o nome?

vet_nome = [] #inicia o vetor
for i in range(4): #inicia o contador
    vet_nome.append(input("Digite o nome: ")) #entrada do nome
print(vet_nome, i) #saída dos nomes inseridos

nome_pesquisar = input("Qual nome deseja pesquisar? ")
if nome_pesquisar in vet_nome: #para procurar um nome que tem dentro do vetor
    print('Aluno encontrado!')
else:
    print('Aluno não encontrado!')

vet_nome = [] #inicia o vetor
for i in range(4): #inicia o contador
    vet_nome.append(input("Digite o nome: ")) #entrada do nome
print(vet_nome) #saída dos nomes inseridos

contador = 0 #inicia um novo contador para a segunda entrada
nome_pesquisar = input("Qual nome deseja pesquisar? ") #segunda entrada para buscar o nome
for i in range(len(vet_nome)): #inicia o contador para fazer a busca
    if nome_pesquisar == vet_nome[i]: #usar o if para encontrar
        contador = contador + 1
        print("Aluno encontrado!")
        break #interrompe a estrututa de repetição
if contador == 0: #se encontra um aluno com o nome
    print("Aluno não encontrado")

"""### 7. Faça um algoritmo que calcule e apresente a média de alturas superior a 1,80 de 10 alunos. Informe também quantos e quais (índice/posição) são os alunos. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

vet_altura = []
for i in range (4):
    vet_altura.append(float(input("Digite a altura: ")))
print(vet_altura)
soma_alturas = 0
for i in range(len(vet_altura)): #quantos elementos dentro do vetor
    if vet_altura[i] > 1.8:
        soma_alturas = soma_alturas + vet_altura[i]
        contador = contador + 1
        print("O aluno nº", i, "tem", vet_altura[i], "metros")

if contador > 0: #se for maior que 0 vai calcular a média
    print("Média de alturas", soma_alturas/contador, "metros") #para mostrar a variavel dividida pelo contador
else:
    print("Não há alunos com altura maior que 1.80")

"""### 8. Criar um algoritmo que a partir de um vetor de 10 elementos inteiros, crie outros dois vetores que receberão os elementos positivos e negativos e ao final apresente-os. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

numero = []
positivo = []
negativo = []
i = 0 #inicialização do contador/indice, tem que isso pra iniciar no while
while i < 5: #condição de parada
    numero.append(int(input("Digite o número: "))) #cadastrar
    if numero [i] > 0: #digita o i para ver o que acabou de digitar no append
        positivo.append(numero[i]) #aqui ele está criando uma nova lista, vetor, então os números positivos vão ser inseridos aqui, enquanto os negativos caem no else
    else:
        negativo.append(numero[i]) #se digitei -6, ele vai cair aqui
    i = i + 1 #incremento do contador, garanto que ele vai repetir o processoo até chegar  no 5
print(numero)
print(positivo)
print(negativo)
print("Apresentação dos valores negativos.....") #para apresentar o índice
for i in range(len(negativo)):
    print("Índice", i, "Elemento vetor negativo: ", negativo[i])

# Digite seu código aqui

"""### 9. Criar um algoritmo que leia dados para um vetor de 100 elementos inteiros, imprimir o maior, o menor, o percentual de números pares e a média dos elementos do vetor. Obs.: percentual = quantidade contada * 100 / quantidade total. Não use nenhuma função pronta da linguagem Python, a não ser len() e append().

"""

elementos = []
pares = 0 #para calcular a média no final
soma_pares = 0
par = 0

for i in range (4):
    elementos.append(int(input("Digite aqui o número: "))) #primeiro crio o contador de entrada

    if i == 0:
        maior = elementos[i]
        menor = elementos[i]
    if elementos[i] > maior: #se o elemento inserido for maior que o penúltimo inserido, então o maior é o último elemento
        maior = elementos[i]

    if elementos[i] < menor: #se o elemento inserido for menor que o penúltimo, então o menor é o último
        menor = elementos[i]

    #agora um if para descobrir quais são pares e calcular o percentual deles:
    if elementos[i] % 2 == 0:
        pares = pares + 1
        par = elementos[i]
    soma_pares = soma_pares + elementos[i]

percentual = (pares * 100) / len(elementos)
media = soma_pares / len(elementos)

#agora as saídas
print(f"Maior elemento: {maior}")
print(f"Menor elemento: {menor}")
print(f"Percentual de números pares: {percentual:.2f}%")
print(f"Média dos elementos: {media:.2f}")

"""### 10. Faça um programa que:

* preencha um vetor com seis elementos numéricos inteiros.

**Calcule e mostre:**

* todos os números pares;
* a quantidade de números pares;
* todos os números ímpares;
* a quantidade de números ímpares

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

numeros = []
pares = 0
impares = 0
for i in range(3):
    numeros.append(int(input("Digite aqui um número inteiro: ")))
for i in range(len(numeros)):
    if numeros[i] % 2 == 0:
        pares = pares + 1
        print(f"O elemento {numeros[i]} é par e está no índice", i)
    else:
        impares = impares + 1
        print(f"O elemento {numeros[i]} é ímpar e está no índice", i)

print(f"Há {pares} pares")
print(f"Há {impares} impares")

"""### 11. Faça um programa que:

* preencha um vetor com sete números inteiros

**Calcule e mostre:**

* os números múltiplos de 2;
* os números múltiplos de 3;
* os números múltiplos de 2 **e de** 3.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

vetor = []

for i in range(7):
    numero = int(input(f'Digite o {i+1}º número inteiro: '))
    vetor.append(numero)

cont_m2 = cont_m3 = cont_m2_e_3 = 0

for numero in vetor:
    if numero % 2 == 0:
        print(f'{numero} é múltiplo de 2.')
        cont_m2 += 1

    if numero % 3 == 0:
        print(f'{numero} é múltiplo de 3.')
        cont_m3 += 1

    if numero % 2 == 0 and numero % 3 == 0:
        print(f'{numero} é múltiplo de 2 e de 3.')
        cont_m2_e_3 += 1

# Mostra o total de múltiplos de 2, de 3 e de 2 e 3
print(f'Total de múltiplos de 2: {cont_m2}')
print(f'Total de múltiplos de 3: {cont_m3}')
print(f'Total de múltiplos de 2 e 3: {cont_m2_e_3}')

numeros = []
num2 = []
num3 = []
num2_3 = []

for i in range (3):
    numeros.append(int(input("Digite um número inteiro: ")))

for i in range(len(numeros)):
    if numeros[i] % 2 == 0:
        num2.append(numeros[i])

for i in range(len(numeros)):
    if numeros[i] % 3 == 0:
        num3.append(numeros[i])

for i in range(len(numeros)):
    if numeros[i] % 2 == 0 and numeros[i] % 3 == 0:
        num2_3.append(numeros[i])

print(f'Os números multiplos de 2 são {num2}')
print(f'Os números multiplos de 3 são {num3}')
print(f'Os números multiplos de 2 e 3 são {num2_3}')

"""### 12. Faça um programa que:

* preencha um vetor com quinze elementos inteiros
* verifique a existência de elementos iguais a 30, mostrando os índices/posições em que apareceram.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

numeros = []
num30 =[]
for i in range(5):
    numeros.append(int(input("Digite aqui um número: ")))

for i in range(len(numeros)):
    if numeros[i] == 30:
        num30.append(i)

print(f"Há {len(num30)} números 30 na lista e estão nos índices:", num30)

"""### 13. Faça um programa que:

* preencha um vetor com dez números reais

**Calcule e mostre:**

* a quantidade de números negativos
* a soma dos números positivos desse *vetor*
* não use nenhuma função pronta da linguagem Python
"""

numeros=[]
for i in range (4):
    numeros.append(int(input(f"Digite o {i+1}º número: ")))

negativos = 0
positivos = 0

for i in range(len(numeros)):
    if numeros[i] < 0:
        negativos = negativos + 1

for i in range(len(numeros)):
    if numeros[i] > 0:
        positivos = positivos + numeros[i]

print(f"\nQuantidade de números negativos: {negativos}")
print(f"Soma dos números positivos: {positivos}")

"""### 14. Faça um programa que:

* receba dez números inteiros e armazene-os em um vetor
* classifique os números em dois vetores, um com números pares e o outra com os ímpares

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

numeros = []
pares = []
impares = []
for i in range(6):
    numeros.append(int(input("Digite aqui um número inteiro: ")))

for i in range(len(numeros)):
    if numeros[i] % 2 == 0:
        pares.append(numeros[i])

for i in range(len(numeros)):
    if numeros[i] % 2 == 1:
        impares.append(numeros[i])

print(f"\nAssim, temos duas listas, uma de números pares: {pares} e a de números ímpares{impares}")

"""### 15. Faça um programa que:

* preencha um vetor com quinze números

**Determine e mostre:**

* o maior número e a posição por ele ocupada no vetor
* o menor número e a posição por ele ocupada no vetor

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

numeros = [1, 5, 30, 6]

menor = min(numeros)
maior = max(numeros)
print(f"O maior número da lista é: {maior}")
print(f"O menor número da lista é: {menor}")

"""### 16. Faça um programa que:

* preencha dois vetores com de dez numeros cada
* preencha um terceiro vetor com os números dos dois vetores anteriores ordenados em ordem crescente

"""

primeiro = [5, 2, 35, 25]
segundo = [79, 81, 82, 31]

soma = primeiro + segundo
soma.sort()

print(f"O primeiro vetor é: {primeiro}")
print(f"O segundo vetor é: {segundo}")
print(f"0 terceiro vetor que mostra os dois em ordem crescente é: {soma}")

"""### 17. Faça um programa que:

* carregue dois vetores com 10 números cada
* faça a multiplicação dos números na mesma posição
* o resultado deverá ser adicionada em um terceiro vetor

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

vetor1 = [1, 5, 6, 8, 60, 57]
vetor2 = [5, 9, 3, 7, 56, 23]
vetor3= [1*5, 5*9, 6*3, 8*7, 60*56, 57*23]
print(f"{vetor3}")

"""### 18. Faça um programa que:

* leia um vetor de 10 números inteiros
* exiba na tela os números positivos e seus respectivos índices.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

numeros = []
for i in range(5):
    numeros.append(int(input("Insira aqui um número: ")))

for i in range(len(numeros)):
    if numeros[i] > 0:
        print(f"Número: {numeros[i]}, Índice: {i}")

"""### 19. Faça um programa que:

* insira dez números inteiros em um vetor
* crie um segundo vetor, substituindo os números multiplos de 3 por "999""
* exiba os dois vetores

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

numeros = []
mult3 = []

for i in range(5):
    numero = float(input(f'Digite o numero: '))
    numeros.append(numero)

for i in range(len(numeros)):
    conta = numeros[i] * 0.01
    m3 = numeros[i] - conta
    mult3.append(m3)

print("Apresente: ")

# Digite seu código aqui

"""### 20. Faça um programa que:

* leia dois vetores (A e B) com cinco posições para números inteiros.
* o programa deve, então, subtrair o primeiro elemento de A do último de B, armazenando o resultado num terceiro vetor, subtrair o segundo elemento de A do penúltimo de B, armazenando o resultado num terceiro vetor e assim por diante.
* ao final, mostre o resultado do terceiro vetor

O índice de um dos vetores terá que ser decrementado (slide 2 de Vetor) , ou seja, você implementara ele manualmente.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Digite seu código aqui.
# Exemplo:
# a [89, 41, 64, 55, 93]
# b [68, 32, 79, 76, 38]
# c [89 - 38, 41 - 76, 64 - 79, 55 - 32, 93 - 68]
# c [51, -35, -15, 23, 25]

"""###21. Faça um programa que:

* preencha um vetor de cinco números e mostre a saída a seguir:
* imprima a seguinte saída, exemplo (cada número e o sinal de adição e depois o resultado da soma dos números) 8 + 2 + 1 + 3 + 0 = 14

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Digite seu código aqui.

"""### 22. Faça um programa que:
* leia um vetor com quinze posições para números inteiros.
* depois da leitura, em outro vetor, armazene a divisão de todos os  elementos pelo maior valor do vetor, para isso encontre o maior elemento
* Mostre o vetor após os cálculos.

Não use nenhuma função pronta da linguagem Python, a não ser len() e append().
"""

# Digite seu código aqui.

"""### 23. Um vetor é palíndromo se ele não se alterar quando o mesmo for invertido. Escreva um programa que verifique se um vetor é palíndromo, fazendo comparação de índice/posição por índice/posição do vetor original (vo) com o vetor invertido (vi). Não use nenhuma função pronta da linguagem Python. A tamanho do vetor pode ser da sua escolha.
Exemplo:
vetor original    vo = {1, 3, 5, 2, 2, 5, 3, 1}  
vetor invertido é vi = {1, 3, 5, 2, 2, 5, 3, 1}
O vetor invertido **é palíndromo**, pois ele invertido é igual ao original

vetor original    vo = {9, 7, 5, 2, 4, 5, 3, 6}  
vetor invertido é vi = {6, 3, 5, 4, 2, 5, 7, 9}
O vetor invertido **não é palíndromo**, pois ele invertido é igual ao original


"""

# Digite seu código aqui.